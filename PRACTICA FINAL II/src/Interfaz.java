
import java.io.*;
import javax.swing.*;
import java.util.*;
import java.io.FileOutputStream;

public class Interfaz extends javax.swing.JFrame
{
    JFileChooser fc;
    static private final String newline = "\n";
    private ArrayList <Carta> a = new ArrayList<Carta>();
    private String extension;
    /** Creates new form Interfaz */
    public Interfaz()
    {
      try
		{
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		}
		catch (Exception e)
		{

		}
        initComponents();
        this.setLocationRelativeTo(null);
        fc = new JFileChooser();
      
        extension = "WAM";
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Castillo de naipes");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setResizable(false);

        jPanel2.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));

        jLabel1.setFont(new java.awt.Font("Arial Black", 0, 11));
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Ingrese casos de prueba:");

        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Britannic Bold", 0, 13));
        jTextArea1.setRows(5);
        jTextArea1.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(51, 51, 255)));
        jScrollPane1.setViewportView(jTextArea1);

        jTextArea2.setColumns(20);
        jTextArea2.setEditable(false);
        jTextArea2.setFont(new java.awt.Font("Britannic Bold", 0, 13));
        jTextArea2.setRows(5);
        jTextArea2.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(51, 51, 255)));
        jScrollPane2.setViewportView(jTextArea2);

        jLabel2.setFont(new java.awt.Font("Arial Black", 0, 11));
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Salida:");

        jButton2.setFont(new java.awt.Font("Britannic Bold", 0, 13));
        jButton2.setText("RESOLVER");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Britannic Bold", 0, 13));
        jButton1.setText("ABRIR ARCHIVO");
        jButton1.setBorder(null);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Britannic Bold", 0, 13));
        jButton3.setText("SALIR");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Britannic Bold", 0, 13));
        jButton4.setText("GUARDAR ARCHIVO");
        jButton4.setBorder(null);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setFont(new java.awt.Font("Britannic Bold", 0, 13));
        jButton5.setText("LIMPIAR");
        jButton5.setBorder(null);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton3)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(20, 20, 20))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void solucion()
    {
        String linea1;
        String linea2;
        String linea3;
        int casos = 0;
        Carta c;
        ArrayList <String> resCasos = new ArrayList <String>();

        if(jTextArea1.getText().equals(""))
        {
            JOptionPane.showMessageDialog(this, "DEBES INGRESAR LAS BARAJAS AL CAMPO", "ERROR",JOptionPane.ERROR_MESSAGE);
        }
        else
        {
            try
                {
                    BufferedReader reader = new BufferedReader(new StringReader(jTextArea1.getText()));
                    String temp = reader.readLine();
                    while(!temp.equals("End"))
                    {
                        linea1 = temp;
                        if((linea1.equals("Axel") || linea1.equals("Birgit")))
                        {
                            linea2 = reader.readLine();
                            try
                            {
                                if(!linea2.equals(null))
                                {
                                    int valMax = Integer.parseInt(linea2);
                                    if(valMax <= 13 && valMax >= 5)
                                    {
                                        try
                                        {
                                            linea3 = reader.readLine();
                                            if(!linea3.equals(null))
                                            {
                                                String p = linea3;
                                                char arr[] = new char[p.length()];
                                                p.getChars(0, p.length(), arr, 0);

                                                String tempVal ="";
                                                char varRango = ' ';
                                                for(int i = 0; i < p.length(); i++)
                                                {
                                                    while(arr[i] != 'r' && arr[i] != 'b' && arr[i] != 'R' && arr[i] != 'B')
                                                    {
                                                        tempVal += arr[i];
                                                        i++;
                                                    }

                                                    int val = Integer.parseInt(tempVal);
                                                    tempVal = "";

                                                    if(arr[i] == 'r' || arr[i] == 'b' || arr[i] == 'R' || arr[i] == 'B')
                                                    {
                                                        varRango = arr[i];
                                                        i = i+1;
                                                    }
                                                    c = new Carta(val,varRango);
                                                    a.add(c);
                                                }

                                                if(!linea1.equals("Axel") && !linea1.equals("Birgit"))
                                                {
                                                        JOptionPane.showMessageDialog(this,"Por Favor Verifica la Entrada","ERROR",JOptionPane.ERROR_MESSAGE);
                                                }
                                                else
                                                {
                                                    Main m = new Main();
                                                    resCasos.add(m.aJugar(a, linea1));
                                                    casos = casos +1;
                                                }
                                            }
                                        }
                                        catch(Exception e)
                                        {
                                           JOptionPane.showMessageDialog(this,"Por favor revisa de nuevo la entrada","ERROR",JOptionPane.ERROR_MESSAGE);
                                        }
                                    }
                                    else
                                    {
                                           JOptionPane.showMessageDialog(this,"el valor minimo del maximo de las cartas debe estar entre 5 & 13","ERROR",JOptionPane.ERROR_MESSAGE);
                                    }
                                }
                                else
                                {
                                    JOptionPane.showMessageDialog(this,"Por favor revisa de nuevo la entrada","ERROR",JOptionPane.ERROR_MESSAGE);

                                }
                            }
                            catch(Exception e)
                            {
                                JOptionPane.showMessageDialog(this,"Debes ingresar solo números en la segunda línea","ERROR",JOptionPane.ERROR_MESSAGE);
                            }
                        }
                        else
                        {
                                JOptionPane.showMessageDialog(this,"Por favor revisa de nuevo la entrada","ERROR",JOptionPane.ERROR_MESSAGE);
                        }
                        temp = reader.readLine();
                    }
                }
                catch (Exception ex)
                {
                    
                }
        }
        for (int i = 0; i < resCasos.size();i++)
        {
            int reverCasos = 1;
            for(;casos >0; casos--)
            {
                jTextArea2.append("Caso " + reverCasos + ":" + resCasos.get(reverCasos-1)+ "\n");
                reverCasos++;
            }
        }
    }
    /**
     * Valida la entrada del usuario ya sea esccrita o por archivo
     * @param evt
     */
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        if(!jTextArea2.getText().equals(null))
        {
            jTextArea2.setText("");
        }
        solucion();
}//GEN-LAST:event_jButton2ActionPerformed

    /**
     * Método que abre un archivo para la entrada de datos en la interfaz
     * @param evt
     */
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if(jTextArea1.getText().equals(""))
        {
            abrirArchivo();
        }
        else
        {
            int resp = JOptionPane.showConfirmDialog(this, "¿ESTÁS SEGURO QUE DESEAS EMPEZAR DE NUEVO? " ,
                    "ADVERTENCÍA", JOptionPane.YES_NO_OPTION,JOptionPane.WARNING_MESSAGE);

            if(resp == JOptionPane.YES_OPTION)
            {
                jTextArea1.setText(null);
                jTextArea2.setText(null);
                abrirArchivo();
            }
        }
}//GEN-LAST:event_jButton1ActionPerformed

    /**
     * Metodo donde se abre un archivo desde la interfaz gráfica
     */
    public void abrirArchivo()
    {
        int returnVal = fc.showOpenDialog(Interfaz.this);

            if (returnVal == JFileChooser.APPROVE_OPTION)
            {
                File file = fc.getSelectedFile();
                //This is where a real application would open the file.
                try
                {
                    BufferedReader reader = new BufferedReader(new FileReader(file));
                    String linea = reader.readLine();
                    while (linea != null)
                    {
                        jTextArea1.append(linea + "\n");
                        linea = reader.readLine();
                    }
                }
                catch (Exception ex)
                {
                }
            }
            jTextArea1.setCaretPosition(jTextArea1.getDocument().getLength());
    }

    public void guardarArchivo ()
	{
		int returnVal = fc.showSaveDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION)
        {
        	String nombreArchivo = fc.getSelectedFile().getPath();
        	try
            {
			    File file = new File (nombreArchivo+"."+extension);
    			FileWriter out = new FileWriter(file);
    			String texto = "ENTRADA =========>"+jTextArea1.getText();
                texto = texto + "\n=====================" +
                        "SALIDA=========>"+jTextArea2.getText();
                System.out.println(texto);
    			out.write(texto);
    			out.close();
    		}
  			catch (IOException e1)
  			{
				JOptionPane.showMessageDialog(null, "NO SE PUDO GUARDAR '" +nombreArchivo + "'","ERROR DE ESCRITURA",JOptionPane.ERROR_MESSAGE);
  			}
        }
	}

    /**
     * Evento que al realizarse pregunta si se desea salir del programa
     * en caso afirmativo se sale y muestra un mensaje de despedida
     * @param evt
     */
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        if (evt.getSource()== jButton3) 
        {
            int resp = JOptionPane.showConfirmDialog(this, "¿ESTÁ SEGURO QUE DESEA SALIR DEL PROGRAMA? ",
                    "ADVERTENCÍA", JOptionPane.YES_NO_OPTION);
            if(resp == JOptionPane.YES_OPTION)
            {
                this.setVisible(false);
                JOptionPane.showMessageDialog(null, "¡HASTA PRONTO!");
                System.exit(7);
            }
        }
}//GEN-LAST:event_jButton3ActionPerformed

    /**
     * Evento donde se guarda en un archivo la entrada para el programa
     * @param evt
     */
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        if (!jTextArea1.getText().equals("") && !jTextArea2.getText().equals(""))
        {
            guardarArchivo();
        }
        else
        {
            JOptionPane.showMessageDialog(this, "SOLO TE GUARDO LA ENTRADA CON SU RESPECTIVA SALIDA",
                    "ADVERTENCÍA", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        if (!jTextArea1.getText().equals("") && !jTextArea2.getText().equals(""))
        {
            jTextArea1.setText("");
            jTextArea2.setText("");
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    // End of variables declaration//GEN-END:variables

}
